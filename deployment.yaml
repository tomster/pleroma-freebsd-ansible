---
- hosts: pleroma
  become: yes
  handlers:
   - name: restart postgresql
     service: name=postgresql state=restarted
   - name: restart nginx
     service: name=nginx state=restarted

  vars:
   - backend_user: pleroma
   - pleroma_env:
      MIX_ENV: prod

  tasks:
    - name: Install packages
      community.general.pkgng:
        name:
          - fish
          - vim
          - chezmoi
          - screen
          - nginx
          - git-lite
          - rsync
          - autojump
          - postgresql15-server
          - postgresql15-client
          - postgresql15-contrib
          - elixir
          - gmake
          - acme.sh
          - cmake
          - ImageMagick7
          - ffmpeg
          - p5-Image-ExifTool

    - name: init chezmoi
      become: no
      ansible.builtin.command:
        cmd: "/usr/local/bin/chezmoi init --apply git@github.com:/tomster/dotfiles"
        creates: /usr/home/tomster/.config/chezmoi/chezmoi.toml

    - name: update chezmoi
      become: no
      ansible.builtin.command:
        cmd: "/usr/local/bin/chezmoi update"

    - name: setup user
      ansible.builtin.user:
        name: tomster
        shell: /usr/local/bin/fish

    - name: enable nginx
      community.general.sysrc:
        name: nginx_enable
        value: "YES"
    
    - name: enable postgresql
      community.general.sysrc:
        name: postgresql_enable
        value: "YES"

    - name: init postgresql
      ansible.builtin.command:
        cmd: "service postgresql initdb"
        creates: /var/db/postgres/data15/postgresql.conf

    - name: Ensure postgres is started at boot time
      ansible.builtin.service:
        name: postgresql
        state: started

    - name: setup pleroma service user
      ansible.builtin.user:
        name: pleroma
        create_home: true
        shell: /usr/local/bin/fish

    - name: let www access acme certs
      ansible.builtin.user:
        name: www
        append: true
        groups: acme

    - name: Git checkout
      become: yes
      become_user: pleroma
      ansible.builtin.git:
        repo: 'https://git.pleroma.social/pleroma/pleroma.git'
        dest: /usr/home/pleroma/pleroma
        version: stable
  
    - name: install hex
      become: yes
      become_user: pleroma
      ansible.builtin.command:
        cmd: "mix local.hex --force"
        chdir: /usr/home/pleroma/pleroma
        creates: /home/pleroma/.mix/archives/hex-2.0.0
      environment: "{{ pleroma_env }}"

    - name: install mix deps
      become: yes
      become_user: pleroma
      ansible.builtin.command:
        cmd: "mix deps.get --force"
        chdir: /usr/home/pleroma/pleroma
        creates: /home/pleroma/pleroma/config/generated_config.exs
      environment: "{{ pleroma_env }}"

    - name: copy generated configuration
      ansible.builtin.copy:
        src: /home/pleroma/pleroma/config/generated_config.exs
        dest: /home/pleroma/pleroma/config/prod.secret.exs
        remote_src: yes
      
    - name: initialize database
      become: yes
      become_user: postgres
      ansible.builtin.command:
        cmd: "psql -f config/setup_db.psql"
        chdir: /usr/home/pleroma/pleroma
      
    - name: touch acme logs
      ansible.builtin.file:
        path: /var/log/acme.sh.log
        state: touch
        owner: acme
        group: acme
        mode: '0600'

    - name: register with acme
      become: yes
      become_user: acme
      ansible.builtin.command:
        cmd: "acme.sh --register-account -m {{ email }}"
  
    - name: configure nginx
      template: src=nginx.conf dest=/usr/local/etc/nginx/nginx.conf owner=root mode=555
      tags: nginx_config

    - name: ensure nginx conf.d directory exists
      file: path=/usr/local/etc/nginx/conf.d state=directory owner=root mode=755
      tags: nginx_config
  
    - name: configure nginx for acme challenge
      template: src=pleroma_wkac.conf dest=/usr/local/etc/nginx/conf.d/pleroma_wkac.conf owner=root mode=555
      tags: nginx_config

    - name: Ensure nginx is started at boot time
      ansible.builtin.service:
        name: nginx
        state: started
      tags: nginx_config

    - name: issue cert with acme
      become: yes
      become_user: acme
      ansible.builtin.command:
        cmd: "acme.sh  --issue -d {{ www_server_name: }} --stateless"
        creates: "/var/db/acme/certs/{{ www_server_name: }}/fullchain.cer"
    
    - name: configure nginx
      template: src=pleroma.conf dest=/usr/local/etc/nginx/conf.d/pleroma.conf owner=root mode=555
      tags: nginx_config

    - name: copy startup script
      ansible.builtin.copy:
        src: pleroma.service
        dest: /usr/local/etc/rc.d/pleroma
        mode: '0755'
        
    - name: enable pleroma
      community.general.sysrc:
        name: pleroma_enable
        value: "YES"

    - name: Ensure pleroma is started at boot time
      ansible.builtin.service:
        name: pleroma
        state: started

    - name: create admin user
      become: yes
      become_user: "{{ backend_user }}"
      ansible.builtin.command:
        cmd: "mix pleroma.user new {{ username }} {{ email }} --admin -y"
        chdir: /usr/home/pleroma/pleroma
      environment: "{{ pleroma_env }}"